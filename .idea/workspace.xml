<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </select>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d064fdea-d921-4fd4-84bd-ed603bd63e33" name="Default Changelist" comment="pyopengl2-34 consider implement color id intersection&#10;&#10;implement `GlobalColorRegistry`&#10;    This provides cid globally. Does it support multiprocessing? Not yet but may need to.">
      <change afterPath="$PROJECT_DIR$/etc/test ubyte float conversion.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/mkernel/color_registry.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/etc/gl/single frame triangle drawing with element array.py" beforeDir="false" afterPath="$PROJECT_DIR$/etc/gl/single frame triangle drawing with element array.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/etc/noding/getting explained.py" beforeDir="false" afterPath="$PROJECT_DIR$/etc/noding/getting explained.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/examples/gl/single frame triangle drawing with element array.py" beforeDir="false" afterPath="$PROJECT_DIR$/examples/gl/single frame triangle drawing with element array.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/examples/noding/getting explained.py" beforeDir="false" afterPath="$PROJECT_DIR$/examples/noding/getting explained.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/run/render frame buffer.py" beforeDir="false" afterPath="$PROJECT_DIR$/run/render frame buffer.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/run/render points form.py" beforeDir="false" afterPath="$PROJECT_DIR$/run/render points form.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ckernel/render_context/opengl_context/bffr_cache.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/ckernel/render_context/opengl_context/bffr_cache.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ckernel/render_context/opengl_context/meta_entities/prgrm/base.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/ckernel/render_context/opengl_context/meta_entities/prgrm/base.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ckernel/render_context/opengl_context/meta_entities/prgrm/schemas.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/ckernel/render_context/opengl_context/meta_entities/prgrm/schemas.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ckernel/render_context/opengl_context/ogl_entities.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/ckernel/render_context/opengl_context/ogl_entities.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/global_tools/singleton.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/global_tools/singleton.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mkernel/model.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/mkernel/model.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mkernel/renderers/brep_renderer.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/mkernel/renderers/brep_renderer.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mkernel/renderers/polygon_renderer.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/mkernel/renderers/polygon_renderer.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mkernel/renderers/primitive_renderer.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/mkernel/renderers/primitive_renderer.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntCir_frgm_shdr.glsl" beforeDir="false" afterPath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntCir_frgm_shdr.glsl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntCir_vrtx_shdr.glsl" beforeDir="false" afterPath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntCir_vrtx_shdr.glsl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntSqr_frgm_shdr.glsl" beforeDir="false" afterPath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntSqr_frgm_shdr.glsl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntSqr_geom_shdr.glsl" beforeDir="false" afterPath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntSqr_geom_shdr.glsl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntSqr_vrtx_shdr.glsl" beforeDir="false" afterPath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntSqr_vrtx_shdr.glsl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntTgl_frgm_shdr.glsl" beforeDir="false" afterPath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntTgl_frgm_shdr.glsl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntTgl_geom_shdr.glsl" beforeDir="false" afterPath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntTgl_geom_shdr.glsl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntTgl_vrtx_shdr.glsl" beforeDir="false" afterPath="$PROJECT_DIR$/src/mkernel/renderers/shaders/pnts/pntTgl_vrtx_shdr.glsl" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mkernel/shapes/brep_wrapper.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/mkernel/shapes/brep_wrapper.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/mkernel/shapes/primitive_wrapper.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/mkernel/shapes/primitive_wrapper.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wkernel/devices/input/base.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/wkernel/devices/input/base.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wkernel/devices/render/cameras/dolly.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/wkernel/devices/render/cameras/dolly.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wkernel/devices/render/cameras/parts.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/wkernel/devices/render/cameras/parts.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wkernel/devices/render/frame/base.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/wkernel/devices/render/frame/base.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExportToHTMLSettings">
    <option name="printScope" value="2" />
    <option name="OUTPUT_DIRECTORY" value="$PROJECT_DIR$/../pyopengl2\exportToHTML" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="GLSL Shader" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="ma" />
      </list>
    </option>
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="pyopengl2-93" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RESET_MODE" value="HARD" />
    <option name="ROOT_SYNC" value="DONT_SYNC" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="ProjectId" id="1df5FSoV5Z1VWTwNotKKDn0t2kR" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="TODO_SCOPE" value="All Places" />
    <property name="add_unversioned_files" value="true" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File" value="Python" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/run" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
    <property name="start.from.branch" value="origin/pyopengl2-39" />
    <property name="tasks.open.task.update.state.enabled" value="true" />
    <property name="two.files.diff.last.used.file" value="$PROJECT_DIR$/src/mkernel/renderers/shaders/pgon_frgm_shdr.glsl" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2\run" />
      <recent name="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2\etc" />
      <recent name="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2\etc\bench" />
      <recent name="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2\examples\gl" />
      <recent name="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2\src\mkernel\shaders" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2\src\mkernel" />
      <recent name="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2\src\ckernel" />
      <recent name="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2\run" />
      <recent name="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2\src\wkernel\devices\render\cameras" />
      <recent name="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2\src\mkernel\renderers\shaders\tgls" />
    </key>
  </component>
  <component name="RunManager" selected="Python.render frame buffer">
    <configuration name="MWindow" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="pyopengl2" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/wkernel" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/src/wkernel/MWindow.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="render frame buffer" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="pyopengl2" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/run" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/run/render frame buffer.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="render multi process" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="pyopengl2" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/run" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/run/render multi process.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="render points form" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="pyopengl2" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/run" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/run/render points form.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="scratch_11" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="pyopengl2" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$APPLICATION_CONFIG_DIR$/scratches" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$APPLICATION_CONFIG_DIR$/scratches/scratch_11.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.render frame buffer" />
        <item itemvalue="Python.render points form" />
        <item itemvalue="Python.scratch_11" />
        <item itemvalue="Python.render multi process" />
        <item itemvalue="Python.MWindow" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="StructureViewFactory">
    <option name="ACTIVE_ACTIONS" value=",SHOW_INHERITED" />
  </component>
  <component name="SvnConfiguration">
    <configuration>C:\Users\dingo\AppData\Roaming\Subversion</configuration>
  </component>
  <component name="TaskManager">
    <task id="Default" summary="Default task">
      <branch name="windowing" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" />
      <changelist id="d064fdea-d921-4fd4-84bd-ed603bd63e33" name="Default Changelist" comment="pyopengl2-34 consider implement color id intersection&#10;&#10;implement `GlobalColorRegistry`&#10;    This provides cid globally. Does it support multiprocessing? Not yet but may need to." />
      <created>1583740018340</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1594385691392</updated>
    </task>
    <task id="LOCAL-00001" summary="Initialize my 'pyopengl' project rollback&#10;&#10;revised GL specification check function from 'pyopengl' and implemented">
      <created>1583749527788</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1583749527788</updated>
    </task>
    <task id="LOCAL-00002" summary="Implement basic window control&#10;&#10;Used multi threading to handle multiple windows.&#10;Need to review close functionality to correctly release occupied memory.">
      <created>1583841924501</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1583841924501</updated>
    </task>
    <task id="LOCAL-00003" summary="Implement basic window control.&#10;&#10;Multiple window control, basic packaging.&#10;&#10;Used multi threading to handle multiple windows.&#10;Need to review releasing of occupied memory.">
      <created>1588498974816</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1588498974816</updated>
    </task>
    <task id="LOCAL-00004" summary="Adding omitted files.">
      <created>1588499111133</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1588499111133</updated>
    </task>
    <task id="LOCAL-00005" summary="Construct basic GLFW, GL gate for logging.">
      <created>1588515229077</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1588515229077</updated>
    </task>
    <task id="LOCAL-00006" summary="build calculation pipeline&#10;&#10;Pipeline is built from Components and Relationships.&#10;&lt;Pipeline&gt; is the object that holds relationships.&#10;Values can be updated sequentially by evaluating hierarchy of components via relationships bounding them.">
      <created>1592918973486</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1592918973486</updated>
    </task>
    <task id="LOCAL-00007" summary="organize interface logic&#10;&#10;Now there is interface descriptor and container holding real value">
      <created>1592958913254</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1592958913254</updated>
    </task>
    <task id="LOCAL-00008" summary="build single frame triangle draw&#10;&#10;Need to revise mechanism of interface and component-ing">
      <created>1593088856248</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1593088856248</updated>
    </task>
    <task id="LOCAL-00009" summary="redesign Interface&#10;&#10;So, Interface Descriptor returns attribute wrapped by InterfaceValue object. When Input is assigned to IFV object, the Input replaces its IFV object with assigned IFV. When output is called, it sees all inputs and check updated_flag. Then recursively checking goes on until there is no single updated Input or no Input as all. When this base condition is met, execute (def) operate to update Output of the Component. As Output't Object is the same of next Components Input, the next component is guaranteed to have updated Inputs as a result of recursive update. In the end of the recursion, the Component that asked to __get__ Output returns value updated.&#10;Wrapping Value with InterfaceValue object also make it possible to directly assign values in between Outputs and Inputs.">
      <created>1593185567466</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1593185567466</updated>
    </task>
    <task id="LOCAL-00010" summary="Implement NodeSupv&#10;&#10;Node supervisor manages relationship in between nodes.&#10;This makes in-time calculation possible. Interface values of nodes(input, output)&#10;are cached value. It will be updated only when its called, by executing only necessary calculation.&#10;This means calculations of nodes will occur starting from of which input value have been updated, rightward maintaining calculation sequence hierarchy, till (def) operate of node of interest is executed.&#10;Need testing and revision.">
      <created>1593358590397</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1593358590397</updated>
    </task>
    <task id="LOCAL-00011" summary="Test noding algorithm&#10;&#10;Test fix noding. Value update detection, connecting, disconnecting nodes, deleting intf tested. Need more testing, think of other relationship actions.">
      <created>1593441939125</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1593441939125</updated>
    </task>
    <task id="LOCAL-00012" summary="Implement noding mechanism to component mechanism &#10;&#10;Drawing single triangle tested, works fine.&#10;Need to think of raw value class inheriting with (class) IntfObj one more time.">
      <created>1593614105020</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1593614105020</updated>
    </task>
    <task id="LOCAL-00013" summary="Ignore resorce folder">
      <created>1593662984926</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1593662984926</updated>
    </task>
    <task id="LOCAL-00014" summary="Abstract opengl operations&#10;&#10;Refactoring and adding some new data object.&#10;Waiting for Interface's multy-input support.">
      <created>1593682000868</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1593682000868</updated>
    </task>
    <task id="LOCAL-00015" summary="Add functionality 'add siblings'&#10;&#10;Input interface can now have siblings.&#10;Sibling(able) input is an input that can generate several others. Siblings are group of interface that are placed to serve same purpose. This functionality is for components that has ambiguous number of inputs for what it does to generate output. For example, 'add' component can add multiple inputs at once. But how much input needed is not known before it is in real use. So if the user needs to input some more values to be added, it can add sibling (input) interface to do so.">
      <created>1593699821973</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1593699821973</updated>
    </task>
    <task id="LOCAL-00016" summary="branch cleaning">
      <created>1593700387885</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1593700387885</updated>
    </task>
    <task id="LOCAL-00017" summary="Implement Primitive Element Draw&#10;&#10;Refactored vao binding to except multiple buffers.&#10;Implemented Primitive Element Draw and while doing so updated component-interface mechanism.">
      <created>1593747822006</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1593747822006</updated>
    </task>
    <task id="LOCAL-00018" summary="Minor fix">
      <created>1593754591807</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1593754591807</updated>
    </task>
    <task id="LOCAL-00019" summary="Add interface type checking">
      <created>1593756294622</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1593756294622</updated>
    </task>
    <task id="LOCAL-00020" summary="add functionality of Compound Component">
      <created>1593765798600</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1593765798600</updated>
    </task>
    <task id="LOCAL-00021" summary="minor update for Compound Component">
      <created>1593773794389</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1593773794389</updated>
    </task>
    <task id="LOCAL-00022" summary="write backbone of 'RenderTarget' mechanism and 'View'&#10;&#10;RenderTarget(Layer, View, Camera) is a description on where and how to render renderable.&#10;View is an inheritable description on rectangular area. It builds graph by having a parent and children. This is to allow referencing parent to define its property(pos_x, pos_y, width, height)">
      <created>1593932915549</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1593932915549</updated>
    </task>
    <task id="LOCAL-00023" summary="redefine 'View' as a node&#10;&#10;To track parent's size and reference, use noding mechanism.&#10;'Component' will be refactored into 'Node'">
      <created>1594036039338</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1594036039338</updated>
    </task>
    <task id="LOCAL-00024" summary="Provide draw call bonding&#10;&#10;Wrote ParentChildren(PC) pattern and SingletonClass pattern. SingletonClass seems to be redundant for now - maybe it should be refactored as to be NoInstanceClass - however PC pattern makes manipulation of drawcall possible in runtime. User interaction can simply add or removed through methods provided by PC.">
      <created>1594128850899</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1594128850899</updated>
    </task>
    <task id="LOCAL-00025" summary="add abstraction DrawBit&#10;&#10;(class) DrawBit is an abstraction of classes that is a part of parent-child relationship and has (def) draw for chained draw call.&#10;Basic mechanism is to call children't draw call after or before instance's own draw call.&#10;For example window is a subclass of ParentChild so any subclass of it can be added as child of it,&#10;then if a child is subclass of DrawBit, window will execute (def) draw while it runs main render loop.&#10;Of course the child also can have DrawBit children thus chaining (def) draw call.&#10;This way DrawBit child doesn't have to know its root Window object. It just knows it's parent via ParentChild thus encapsulating itself.">
      <created>1594354109883</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1594354109883</updated>
    </task>
    <task id="pyopengl2-1" summary="Make current GLFW context hooking global-read">
      <branch name="windowing" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" original="true" />
      <branch name="pyopengl2-1" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" />
      <created>1594352253000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/1</url>
      <option name="number" value="1" />
      <option name="presentableId" value="pyopengl2-1" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1594364965819</updated>
    </task>
    <task id="pyopengl2-10" summary="enhance result streaming with failed calculation">
      <created>1594647331000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/10</url>
      <option name="number" value="10" />
      <option name="presentableId" value="pyopengl2-10" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1595070930310</updated>
    </task>
    <task id="pyopengl2-9" summary="duplicate grasshopper's stream filter, gate concept">
      <created>1594646736000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/9</url>
      <option name="number" value="9" />
      <option name="presentableId" value="pyopengl2-9" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1595671958894</updated>
    </task>
    <task id="LOCAL-00026" summary="remove node-group&#10;&#10;refactoring to simplify">
      <created>1596877691293</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1596877691293</updated>
    </task>
    <task id="pyopengl2-39" summary="hard coded primitive shape renderer">
      <branch name="master" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" original="true" />
      <branch name="pyopengl2-39" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" />
      <created>1609989983000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/39</url>
      <option name="number" value="39" />
      <option name="presentableId" value="pyopengl2-39" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1611331632695</updated>
    </task>
    <task id="pyopengl2-40" summary="implement rkernel">
      <branch name="origin/pyopengl2-39" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" original="true" />
      <branch name="pyopengl2-40" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" />
      <option name="closed" value="true" />
      <created>1610005382000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/40</url>
      <option name="number" value="40" />
      <option name="presentableId" value="pyopengl2-40" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1610108640036</updated>
    </task>
    <task id="pyopengl2-48" summary="refactor `Window.devices` to implement current device tracker">
      <branch name="origin/pyopengl2-39" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" original="true" />
      <branch name="pyopengl2-48" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" />
      <option name="closed" value="true" />
      <created>1610702556000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/48</url>
      <option name="number" value="48" />
      <option name="presentableId" value="pyopengl2-48" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1611539466380</updated>
    </task>
    <task id="pyopengl2-46" summary="parse variable names from glsl source">
      <created>1610688865000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/46</url>
      <option name="number" value="46" />
      <option name="presentableId" value="pyopengl2-46" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1611138949798</updated>
    </task>
    <task id="pyopengl2-53" summary="implement element array buffer in Shape">
      <branch name="origin/pyopengl2-39" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" original="true" />
      <branch name="pyopengl2-53" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" />
      <created>1611152209000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/53</url>
      <option name="number" value="53" />
      <option name="presentableId" value="pyopengl2-53" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1611539466380</updated>
    </task>
    <task id="pyopengl2-56" summary="fix name 'EntityFactory'">
      <branch name="master" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" original="true" />
      <branch name="pyopengl2-56" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" />
      <created>1611217349000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/56</url>
      <option name="number" value="56" />
      <option name="presentableId" value="pyopengl2-56" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1611567564761</updated>
    </task>
    <task id="pyopengl2-58" summary="implement bffr cache compaction, merge algorithm">
      <branch name="master" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" original="true" />
      <branch name="pyopengl2-58" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" />
      <option name="closed" value="true" />
      <created>1611538999000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/58</url>
      <option name="number" value="58" />
      <option name="presentableId" value="pyopengl2-58" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1612143813039</updated>
    </task>
    <task id="pyopengl2-70" summary="implement model renderer">
      <created>1611926982000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/70</url>
      <option name="number" value="70" />
      <option name="presentableId" value="pyopengl2-70" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1612098423263</updated>
    </task>
    <task id="LOCAL-00027" summary="fix trivial unresolved">
      <created>1612099275679</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1612099275679</updated>
    </task>
    <task id="pyopengl2-73" summary="implement polygon">
      <branch name="master" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" original="true" />
      <branch name="pyopengl2-73" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" />
      <created>1612143692000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/73</url>
      <option name="number" value="73" />
      <option name="presentableId" value="pyopengl2-73" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1613105950468</updated>
    </task>
    <task id="pyopengl2-75" summary="implement camera fit 2D space function">
      <branch name="pyopengl2-73" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" original="true" />
      <branch name="pyopengl2-75" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" />
      <created>1612780673000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/75</url>
      <option name="number" value="75" />
      <option name="presentableId" value="pyopengl2-75" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1612846245194</updated>
    </task>
    <task id="pyopengl2-74" summary="implement `BffrCache` overflow operation">
      <branch name="pyopengl2-73" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" original="true" />
      <branch name="pyopengl2-74" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" />
      <created>1612779178000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/74</url>
      <option name="number" value="74" />
      <option name="presentableId" value="pyopengl2-74" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1612849482158</updated>
    </task>
    <task active="true" id="pyopengl2-93" summary="implement shared Window">
      <branch name="pyopengl2-34" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" original="true" />
      <branch name="pyopengl2-93" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" />
      <created>1613616436000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/93</url>
      <option name="number" value="93" />
      <option name="presentableId" value="pyopengl2-93" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1613984129583</updated>
    </task>
    <task id="pyopengl2-92" summary="refactor GLFW/GL context specification result">
      <branch name="pyopengl2-93" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" original="true" />
      <branch name="pyopengl2-92" repository="C:\Users\dingo\OneDrive\prgrm_dev\pyopengl2" />
      <created>1613559156000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/92</url>
      <option name="number" value="92" />
      <option name="presentableId" value="pyopengl2-92" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1613979094381</updated>
    </task>
    <task id="pyopengl2-34" summary="consider implement color id intersection">
      <created>1609725799000</created>
      <option name="issue" value="true" />
      <url>https://github.com/grasshopperTrainer/pyopengl2/issues/34</url>
      <option name="number" value="34" />
      <option name="presentableId" value="pyopengl2-34" />
      <option name="project" value="pyopengl2" />
      <option name="type" value="BUG" />
      <updated>1613999657548</updated>
    </task>
    <option name="localTasksCounter" value="28" />
    <option name="clearContext" value="false" />
    <servers>
      <GitHub url="https://github.com">
        <option name="preferredOpenTaskState">
          <CustomTaskState id="OPEN" predefined="true" name="Open" />
        </option>
        <option name="repoAuthor" value="grasshopperTrainer" />
        <option name="repoName" value="pyopengl2" />
      </GitHub>
    </servers>
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="SHOW_OTHER_BRANCHES" value="true" />
    <option name="COLUMN_ORDER">
      <list>
        <option value="0" />
        <option value="2" />
        <option value="3" />
        <option value="1" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="pyopengl2-34" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="RECENT_FILTERS">
      <map>
        <entry key="Branch">
          <value>
            <list>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="origin/implement_node_relationship_supervisor" />
                </option>
              </RecentGroup>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="pyopengl2-39 hard coded primitive shape renderer&#10;&#10;implement perspective circle point render&#10;    Smooth circle using vertex and fragment shader only." />
    <MESSAGE value="pyopengl2-53 implement element array buffer in Shape&#10;&#10;enhance line triangle renderer&#10;    Now following pattern of `PointRenderer`.&#10;    &#10;implement triangle point render&#10;    Perspective point render of shape circumcircle triangle." />
    <MESSAGE value="pyopengl2-56 fix name 'EntityFactory'&#10;&#10;refactor 'Factory' into 'Meta'&#10;   The class has 'Factory' functionalities but 'Meta' fits better. 'Meta' class is a class that moves dependency of entity from context to application(holder). Inheritor should implement none-context specific functions at Meta instead of Concrete, such as caching. In the same manner 'Meta' provides python builtin context manager pattern." />
    <MESSAGE value="pyopengl2-58 implement bffr cache compaction, merge algorithm&#10;&#10;implement `SkipList`&#10;    Basic `SkipList` written. Skip list is chosen as a data structure for storing vacant, occupied `BffrCache` Blocks. It is chosen for it having benefits of both array list and linked list, which are, fast binary searching and fast insertion." />
    <MESSAGE value="pyopengl2-58 implement bffr cache compaction, merge algorithm&#10;&#10;benchmark index rendering&#10;    Tested with different primitives. No meaningful difference except rendering without indexing. Consecutive indexing not necessary. So... `SkipList` not necessary. Merging is redundant too. Simple heapq would do the job for now, even if cache miss is still in concern." />
    <MESSAGE value="pyopengl2-70 implement model renderer&#10;&#10;implement point model renderer&#10;    Now `PointRenderer` is an instantiate class. Renderer pattern has programs, vertex buffers as class members and ibo, vao, uniform buffer as instance members. Class vbo has all info of its(point shape) kind and instance members stores shape index that is a part of the model. This way rendering can be separated whilst maintaining single vertex buffer. More inspection needed to determine which is better; having independent vbo-ibo pair per model, or, having single vbo for shape type and ibo per model, but latter is good for now.&#10;&#10;bugfix expression 'highest_idx' of `BffrCache`:&#10;    'highest_idx' to 'active_size'. 'high~' is inadequate expressing 0 length." />
    <MESSAGE value="pyopengl2-70 implement model renderer&#10;&#10;implement line, triangle model renderer" />
    <MESSAGE value="fix trivial unresolved" />
    <MESSAGE value="pyopengl2-73 implement polygon&#10;&#10;implement bad bad Red Black Tree&#10;    It works? tested, but maybe wont in the future. no confidence. But need to move on." />
    <MESSAGE value="pyopengl2-73 implement polygon&#10;&#10;prepare `Pgon` type&#10;implement trapezoidation first stage:&#10;    RedBlackTree used.&#10;    &#10;implement lazyFunc:&#10;    Thought needed but not used yet&#10;&#10;figure out what coordinate system to use for storing polygon(complex) data&#10;    ? Polygon can be normalized into 2D vertex array. Lets say it has its own Local Coordinate System. On the other hand, it can be in 3D space, so it can be expressed in World Coordinate System too. One has to be standard data expression and another cached. So which one should be standard?&#10;    ! In both ways calculation is needed whenever standard expression changes. So it's correct to assume there is no calculation lose dependant to the how standard is expressed. Cant find decisive reason to chose either. Going to cache normalized as existing primitives are already described to store WCS as standard." />
    <MESSAGE value="pyopengl2-73 implement polygon&#10;&#10;fix RedBlackTree:&#10;    Now accept 'comparator' instead of 'key provider'. Comparator is a function that return one of -1, 0, +1 that indicated search direction of the tree. Complicated comparison can be handled this way." />
    <MESSAGE value="pyopengl2-73 implement polygon&#10;&#10;implement line pnt side test:&#10;    In the name of `Lin().pnts_share_side`" />
    <MESSAGE value="pyopengl2-73 implement polygon&#10;&#10;first trapezoidation done&#10;    Proceed to cleanup and testing with various cases" />
    <MESSAGE value="pyopengl2-73 implement polygon&#10;&#10;implement `PolygonRenderer`&#10;    With edge rendering&#10;    &#10;? how to indicate 'render edge'. There are different methods. Some of them are: &#10;1. set edge color alpha 0 &#10;2. set edge thickness 0&#10;3. release edge index&#10;! rendering edge is cosmetic for now. Leave it for implicit method 1 or 2 for now." />
    <MESSAGE value="pyopengl2-75 implement camera fit 2D space function&#10;&#10;implement `Camera.focus_pane`&#10;    Function to tightly wrap 2D pane space at given focus&#10;    resolve #75&#10;&#10;refactor `Camera`&#10;    Objectified further.&#10;    resolve #31&#10;&#10;cleanup wkernel node module&#10;    Related to #41, Camera nodes removed.&#10;    &#10;bugfix `Pnt` circle render&#10;    Viewport position data needed to correctly measure distance between gl_FragCoord and point position in NDC." />
    <MESSAGE value="pyopengl2-74 implement `BffrCache` overflow operation&#10;&#10;implement `BffrCache.__expand_array`&#10;    Turned out to be very simple as Blocks were refering cache not array in it. Shrink is another story but that implementation is not urgent." />
    <MESSAGE value="pyopengl2-73 implement polygon&#10;&#10;generalize Polygon Trapezoidation&#10;    Not yet fully understanding core, implementation fragile. But good for now.&#10;&#10;implement Polygon normal calculator&#10;    Pgon.__calc_normal()&#10;    &#10;bugfix `Pln.from_lin_pnt`&#10;&#10;bugfix Polygon normalized&#10;    normalized is now stored as np.ndarray not Pgon&#10;    &#10;bugfix coordinate value equation&#10;    Comparison without np.isclose caused serious problem. This problem needs better handling." />
    <MESSAGE value="pyopengl2-73 implement polygon&#10;&#10;backup before generalizing HMIN HMAX" />
    <MESSAGE value="pyopengl2-73 implement polygon&#10;&#10;test alphabet Polygon" />
    <MESSAGE value="pyopengl2-93 implement shared Window&#10;&#10;implement ContextCounter&#10;    The class records context in use and make 'glfw.make_context_current' context-free, meaning render thread calling 'glfw.make_context_current' with context being used with another thread will go to sleep till that thread is released by that other thread. So user doesn't have to worry about thread-context paring." />
    <MESSAGE value="pyopengl2-93 implement shared Window&#10;&#10;fix OGLMetaEntity follow MetaContext" />
    <MESSAGE value="pyopengl2-92 refactor GLFW/GL context specification result&#10;&#10;implement&#10;    resolve #92" />
    <MESSAGE value="pyopengl2-92 refactor GLFW/GL context specification result&#10;&#10;fix commit" />
    <MESSAGE value="pyopengl2-92 refactor GLFW/GL context specification result&#10;&#10;implement __lock inside `OGLMetaEntity`&#10;    `get_concrete` has to be locked to ensure only needed entities are created.&#10;    &#10;    As using 'unique render thread' approach, its users obligation to control timing correctly. But as rendering often has sleeping phase, think threading can bring some benefit in terms of efficiency.&#10;    resolve #92" />
    <MESSAGE value="pyopengl2-34 consider implement color id intersection&#10;&#10;implement individual texture clearing" />
    <option name="LAST_COMMIT_MESSAGE" value="pyopengl2-34 consider implement color id intersection&#10;&#10;implement individual texture clearing" />
  </component>
</project>